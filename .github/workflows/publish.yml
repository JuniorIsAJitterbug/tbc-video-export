name: "Publish to PyPI and release packages"

on:
  workflow_run:
    workflows: [Run unit tests]
    types:
      - completed

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: build
    runs-on: ubuntu-latest

    if: ${{ github.event.workflow_run.conclusion == 'success' && github.ref_name == 'master' }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - uses: cachix/install-nix-action@v25

      - name: Install
        run: nix develop --impure --accept-flake-config --command poetry install

      - name: Build
        run: nix develop --impure --accept-flake-config --command poetry build

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-to-testpypi:
    name: Publish to TestPyPI
    runs-on: ubuntu-latest

    needs:
      - build

    environment:
      name: testpypi
      url: https://test.pypi.org/p/tbc-video-export

    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish distribution TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  publish-to-pypi:
    name: Publish to PyPI
    runs-on: ubuntu-latest

    if: startsWith(github.ref, 'refs/tags/v')
    needs:
      - build

    environment:
      name: pypi
      url: https://pypi.org/p/tbc-video-export
    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish distribution package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: Sign the packages with Sigstore and upload them to GitHub Release
    runs-on: ubuntu-latest

    needs:
      - publish-to-pypi

    permissions:
      contents: write # IMPORTANT: mandatory for making GitHub Releases
      id-token: write # IMPORTANT: mandatory for sigstore

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v2.1.1
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          '${{ github.ref_name }}'
          --repo '${{ github.repository }}'
          --notes ""

      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}

        run: >-
          gh release upload
          '${{ github.ref_name }}' dist/**
          --repo '${{ github.repository }}'
