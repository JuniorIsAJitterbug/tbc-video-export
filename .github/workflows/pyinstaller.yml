name: "Build and Release PyInstaller Binaries"

on:
  workflow_run:
    #workflows: [PyPI]
    workflows: [Tests]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  pyinstaller-win:
    name: pyinstaller-win
    runs-on: windows-latest

    #if: ${{ github.event.workflow_run.conclusion == 'success' }} && startsWith(github.ref, 'refs/tags/v')
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Setup Environment
        run: |
          python -m venv .venv
          .\.venv\Scripts\Activate.ps1
          python -m pip install poetry

          New-Item -ItemType Directory -Path .\build

      - name: Setup dependencies
        run: |
          .\.venv\Scripts\Activate.ps1
          python -m poetry install --with=pyinstaller

      - name: Create PyInstaller binary
        run: |
          .\.venv\Scripts\Activate.ps1
          python -m poetry run pyinstaller/build_windows.py

      - name: Test
        run: Get-ChildItem .\dist\

      #- name: Upload binary to GitHub Release
      #  env:
      #    GITHUB_TOKEN: ${{ github.token }}
#
#  run: >-
#    gh release upload
#    '${{ github.ref_name }}' '.\dist\tbc-video-export.exe#tbc-video-export-${{ github.ref_name }}.exe'
#    --repo '${{ github.repository }}'
